done - add ordinal to modules and entries
done -- connect group to course
done -- get auth user courses
done -- implement unit of work
done -- add instructor table and insert command + SP
done -- verify that student in learning module is created
done -- add validation to entry actions and commands (preferably with fluentValidator)
done -- add logging
done -- adopt UoW everywhere
done -- before throwing BusinessRuleValidationException, check if the sql exception code is user-defined
done -- authenticate by tenant id
done -- add permission checks on endpoints
done -- add necessary permissions ad protect the endpoints
done -- register as student (when self-registering, else when user is CREATED that needs permission)
done -- remove master tenant -- tenant management will happen in a different app
done -- add public and private courses (public for the groups which are connected, private only for the owner)
done -- add entry name and don't return entry config/data when getting course, it should be exposed through actions
done -- add minio and course background and files folder.
done -- !!FIX LINK OF IMAGE!! -- fixed link by adding "minio-alias" to hosts file
done -- add some documentation and workarounds
done -- marks for submissions
add permission checks in commands (is it your course that you are editing it or you are admin?)
make tenant and origin relation O2M and connection string more granular (db server + db name); Dynamically connect to the needed database
make user to role relationship o2m instead of m2m

DEPRECATED -- seed db with admin user (under master tenant)
DEPRECATED -- what is master tenant?? (make use of it somehow)
